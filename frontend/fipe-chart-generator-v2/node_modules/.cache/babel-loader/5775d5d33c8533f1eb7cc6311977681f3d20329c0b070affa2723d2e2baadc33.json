{"ast":null,"code":"const backendProperties = require('./BackendConfig.json');\nasync function SendBackendRequest(operation, bodyInfo) {\n  // console.log(\"backendProperties\", backendProperties);\n\n  const backendEndpoint = backendProperties.url + backendProperties.routes[operation];\n  const requestMethod = bodyInfo ? 'POST' : 'GET';\n  var payload = {\n    method: requestMethod,\n    cache: 'no-cache',\n    withCredentials: false,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json;\",\n      \"Access-Control-Allow-Credentials\": true,\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n      \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n    }\n  };\n\n  // console.log(\"bodyInfo: \", bodyInfo);\n\n  if (bodyInfo) {\n    payload[\"body\"] = JSON.stringify(bodyInfo);\n  }\n  console.log(\"Sending \", requestMethod, \" request to \", operation, \"with: \", payload);\n  const response = await fetch(backendEndpoint, payload);\n  const jsonData = await response.json();\n  console.log(\"jsonData: \", jsonData);\n  return jsonData;\n}\n_c = SendBackendRequest;\nasync function GetBackendInfo(operation, bodyInfo) {\n  const response = await SendBackendRequest(operation, bodyInfo);\n  return response;\n}\n_c2 = GetBackendInfo;\nasync function GetManufacturersList(vehicleTypeId) {\n  const operation = \"SearchManufacturer\";\n  const requestBodyInfo = {\n    \"vehicleTypeId\": vehicleTypeId\n  };\n  const response = await GetBackendInfo(operation, requestBodyInfo);\n  return response;\n}\n_c3 = GetManufacturersList;\nasync function GetModelsList(vehicleTypeId, manufacturerId) {\n  const operation = \"SearchModels\";\n  const requestBodyInfo = {\n    \"vehicleTypeId\": vehicleTypeId,\n    \"manufacturerId\": manufacturerId\n  };\n  const response = await GetBackendInfo(operation, requestBodyInfo);\n  return response;\n}\n_c4 = GetModelsList;\nasync function GetModelYearsList(vehicleTypeId, manufacturerId, modelId) {\n  const operation = \"SearchModelYears\";\n  const requestBodyInfo = {\n    \"vehicleTypeId\": vehicleTypeId,\n    \"manufacturerId\": manufacturerId,\n    \"modelId\": modelId\n  };\n  const response = await GetBackendInfo(operation, requestBodyInfo);\n  return response;\n}\n_c5 = GetModelYearsList;\nasync function GetVehicleInformation(vehicleTypeId, manufacturerId, modelId, modelYearId) {\n  const operation = \"GetVehicleInformation\";\n  const requestBodyInfo = {\n    \"vehicleTypeId\": vehicleTypeId,\n    \"manufacturerId\": manufacturerId,\n    \"modelId\": modelId,\n    \"modelYearId\": modelYearId\n  };\n  const response = await GetBackendInfo(operation, requestBodyInfo);\n  return response;\n}\n_c6 = GetVehicleInformation;\nasync function GetVehicleTypes() {\n  const operation = \"GetVehicleTypes\";\n  const response = await GetBackendInfo(operation, null);\n  return response;\n}\n_c7 = GetVehicleTypes;\nexport { GetVehicleTypes, GetManufacturersList, GetModelsList, GetModelYearsList, GetVehicleInformation };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SendBackendRequest\");\n$RefreshReg$(_c2, \"GetBackendInfo\");\n$RefreshReg$(_c3, \"GetManufacturersList\");\n$RefreshReg$(_c4, \"GetModelsList\");\n$RefreshReg$(_c5, \"GetModelYearsList\");\n$RefreshReg$(_c6, \"GetVehicleInformation\");\n$RefreshReg$(_c7, \"GetVehicleTypes\");","map":{"version":3,"names":["backendProperties","require","SendBackendRequest","operation","bodyInfo","backendEndpoint","url","routes","requestMethod","payload","method","cache","withCredentials","headers","JSON","stringify","console","log","response","fetch","jsonData","json","GetBackendInfo","GetManufacturersList","vehicleTypeId","requestBodyInfo","GetModelsList","manufacturerId","GetModelYearsList","modelId","GetVehicleInformation","modelYearId","GetVehicleTypes"],"sources":["/home/luisc/react/fipewatcher/frontend/src/interfaces/BackendCalls.js"],"sourcesContent":["const backendProperties = require('./BackendConfig.json');\n\nasync function SendBackendRequest(operation, bodyInfo) {\n\n    // console.log(\"backendProperties\", backendProperties);\n\n    const backendEndpoint = backendProperties.url + backendProperties.routes[operation];\n\n    const requestMethod = (bodyInfo ? 'POST' : 'GET');\n\n    var payload = {\n        method: requestMethod, \n        cache: 'no-cache',\n        withCredentials: false, \n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json;\",\n            \"Access-Control-Allow-Credentials\" : true,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",      \n        }\n    }\n\n    // console.log(\"bodyInfo: \", bodyInfo);\n\n    if (bodyInfo) {\n        payload[\"body\"] = JSON.stringify(bodyInfo);\n    }\n\n    console.log(\"Sending \", requestMethod, \" request to \", operation, \"with: \", payload);\n\n    const response = await fetch(backendEndpoint, payload)\n    const jsonData = await response.json();\n\n    console.log(\"jsonData: \", jsonData);\n\n    return jsonData;\n\n}\n\nasync function GetBackendInfo (operation, bodyInfo) {\n\n    const response = await SendBackendRequest(operation, bodyInfo);\n    return response;\n\n}\n\nasync function GetManufacturersList(vehicleTypeId) {\n\n    const operation = \"SearchManufacturer\";\n\n    const requestBodyInfo = {\n        \"vehicleTypeId\": vehicleTypeId\n    }\n\n    const response = await GetBackendInfo(operation, requestBodyInfo);\n    return response\n\n}\n\nasync function GetModelsList(vehicleTypeId, manufacturerId) {\n\n    const operation = \"SearchModels\";\n\n    const requestBodyInfo = {\n        \"vehicleTypeId\": vehicleTypeId,\n        \"manufacturerId\": manufacturerId\n    }\n\n    const response = await GetBackendInfo(operation, requestBodyInfo);\n    return response\n\n}\n\nasync function GetModelYearsList(vehicleTypeId, manufacturerId, modelId) {\n\n    const operation = \"SearchModelYears\";\n\n    const requestBodyInfo = {\n        \"vehicleTypeId\": vehicleTypeId,\n        \"manufacturerId\": manufacturerId,\n        \"modelId\": modelId\n    }\n\n    const response = await GetBackendInfo(operation, requestBodyInfo);\n    return response\n\n}\n\nasync function GetVehicleInformation(vehicleTypeId, manufacturerId, modelId, modelYearId) {\n\n    const operation = \"GetVehicleInformation\";\n\n    const requestBodyInfo = {\n        \"vehicleTypeId\": vehicleTypeId,\n        \"manufacturerId\": manufacturerId,\n        \"modelId\": modelId,\n        \"modelYearId\": modelYearId\n    }\n\n    const response = await GetBackendInfo(operation, requestBodyInfo);\n    return response\n\n}\n\nasync function GetVehicleTypes() {\n\n    const operation = \"GetVehicleTypes\";\n\n    const response = await GetBackendInfo(operation, null);\n    return response\n}\n\nexport { GetVehicleTypes, GetManufacturersList, GetModelsList, GetModelYearsList, GetVehicleInformation }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}