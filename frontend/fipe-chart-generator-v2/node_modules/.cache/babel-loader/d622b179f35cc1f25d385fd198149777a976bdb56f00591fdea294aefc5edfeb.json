{"ast":null,"code":"const backendProperties = require('./BackendConfig.json');\nasync function SendBackendRequest(operation, bodyInfo) {\n  console.log(\"backendProperties\", backendProperties);\n  const backendEndpoint = backendProperties.url + backendProperties.routes[operation];\n  const requestMethod = bodyInfo ? 'POST' : 'GET';\n  var payload = {\n    method: requestMethod,\n    cache: 'no-cache',\n    withCredentials: false,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json;\",\n      \"Access-Control-Allow-Credentials\": true,\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n      \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n    }\n  };\n  console.log(\"bodyInfo: \", bodyInfo);\n  if (bodyInfo) {\n    payload[\"body\"] = JSON.stringify(bodyInfo);\n  }\n  console.log(\"Sending \", requestMethod, \" request to \", operation, \"with: \", payload);\n  const response = await fetch(backendEndpoint, payload);\n  const jsonData = await response.json();\n  console.log(\"jsonData: \", jsonData);\n  return jsonData;\n}\n_c = SendBackendRequest;\nasync function GetBackendInfo(operation, bodyInfo) {\n  const response = await SendBackendRequest(operation, bodyInfo);\n  return response;\n}\n_c2 = GetBackendInfo;\nasync function GetManufacturersList(vehicleTypeId) {\n  const operation = \"SearchManufacturer\";\n  const requestBodyInfo = {\n    \"vehicleTypeId\": vehicleTypeId\n  };\n  const response = await GetBackendInfo(operation, requestBodyInfo);\n  return response;\n}\n_c3 = GetManufacturersList;\nasync function GetVehicleTypes() {\n  const operation = \"GetVehicleTypes\";\n  const response = await GetBackendInfo(operation, null);\n  return response;\n}\n_c4 = GetVehicleTypes;\nexport { GetVehicleTypes, GetManufacturersList };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SendBackendRequest\");\n$RefreshReg$(_c2, \"GetBackendInfo\");\n$RefreshReg$(_c3, \"GetManufacturersList\");\n$RefreshReg$(_c4, \"GetVehicleTypes\");","map":{"version":3,"names":["backendProperties","require","SendBackendRequest","operation","bodyInfo","console","log","backendEndpoint","url","routes","requestMethod","payload","method","cache","withCredentials","headers","JSON","stringify","response","fetch","jsonData","json","GetBackendInfo","GetManufacturersList","vehicleTypeId","requestBodyInfo","GetVehicleTypes"],"sources":["/home/luisc/react/fipe-chart-generator/frontend/fipe-chart-generator-v2/src/interfaces/BackendCalls.js"],"sourcesContent":["const backendProperties = require('./BackendConfig.json');\n\n\nasync function SendBackendRequest(operation, bodyInfo) {\n\n    console.log(\"backendProperties\", backendProperties);\n\n    const backendEndpoint = backendProperties.url + backendProperties.routes[operation];\n\n    const requestMethod = (bodyInfo ? 'POST' : 'GET');\n\n    var payload = {\n        method: requestMethod, \n        cache: 'no-cache',\n        withCredentials: false, \n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json;\",\n            \"Access-Control-Allow-Credentials\" : true,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",      \n        }\n    }\n\n    console.log(\"bodyInfo: \", bodyInfo)\n\n    if (bodyInfo) {\n        payload[\"body\"] = JSON.stringify(bodyInfo);\n    }\n\n    console.log(\"Sending \", requestMethod, \" request to \", operation, \"with: \", payload);\n\n    const response = await fetch(backendEndpoint, payload)\n    const jsonData = await response.json();\n\n    console.log(\"jsonData: \", jsonData);\n\n    return jsonData;\n\n}\n\nasync function GetBackendInfo (operation, bodyInfo) {\n\n    const response = await SendBackendRequest(operation, bodyInfo);\n    return response;\n\n}\n\nasync function GetManufacturersList(vehicleTypeId) {\n\n    const operation = \"SearchManufacturer\";\n\n    const requestBodyInfo = {\n        \"vehicleTypeId\": vehicleTypeId\n    }\n\n    const response = await GetBackendInfo(operation, requestBodyInfo);\n    return response\n\n}\n\nasync function GetVehicleTypes() {\n\n    const operation = \"GetVehicleTypes\";\n\n    const response = await GetBackendInfo(operation, null);\n    return response\n}\n\nexport { GetVehicleTypes, GetManufacturersList }"],"mappings":"AAAA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAGzD,eAAeC,kBAAkB,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAEnDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,iBAAiB,CAAC;EAEnD,MAAMO,eAAe,GAAGP,iBAAiB,CAACQ,GAAG,GAAGR,iBAAiB,CAACS,MAAM,CAACN,SAAS,CAAC;EAEnF,MAAMO,aAAa,GAAIN,QAAQ,GAAG,MAAM,GAAG,KAAM;EAEjD,IAAIO,OAAO,GAAG;IACVC,MAAM,EAAEF,aAAa;IACrBG,KAAK,EAAE,UAAU;IACjBC,eAAe,EAAE,KAAK;IACtBC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE,mBAAmB;MAC7B,kCAAkC,EAAG,IAAI;MACzC,6BAA6B,EAAE,GAAG;MAClC,8BAA8B,EAAE,4BAA4B;MAC5D,8BAA8B,EAAE;IACpC;EACJ,CAAC;EAEDV,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;EAEnC,IAAIA,QAAQ,EAAE;IACVO,OAAO,CAAC,MAAM,CAAC,GAAGK,IAAI,CAACC,SAAS,CAACb,QAAQ,CAAC;EAC9C;EAEAC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEI,aAAa,EAAE,cAAc,EAAEP,SAAS,EAAE,QAAQ,EAAEQ,OAAO,CAAC;EAEpF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACZ,eAAe,EAAEI,OAAO,CAAC;EACtD,MAAMS,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAEtChB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEc,QAAQ,CAAC;EAEnC,OAAOA,QAAQ;AAEnB;AAAC,KArCclB,kBAAkB;AAuCjC,eAAeoB,cAAc,CAAEnB,SAAS,EAAEC,QAAQ,EAAE;EAEhD,MAAMc,QAAQ,GAAG,MAAMhB,kBAAkB,CAACC,SAAS,EAAEC,QAAQ,CAAC;EAC9D,OAAOc,QAAQ;AAEnB;AAAC,MALcI,cAAc;AAO7B,eAAeC,oBAAoB,CAACC,aAAa,EAAE;EAE/C,MAAMrB,SAAS,GAAG,oBAAoB;EAEtC,MAAMsB,eAAe,GAAG;IACpB,eAAe,EAAED;EACrB,CAAC;EAED,MAAMN,QAAQ,GAAG,MAAMI,cAAc,CAACnB,SAAS,EAAEsB,eAAe,CAAC;EACjE,OAAOP,QAAQ;AAEnB;AAAC,MAXcK,oBAAoB;AAanC,eAAeG,eAAe,GAAG;EAE7B,MAAMvB,SAAS,GAAG,iBAAiB;EAEnC,MAAMe,QAAQ,GAAG,MAAMI,cAAc,CAACnB,SAAS,EAAE,IAAI,CAAC;EACtD,OAAOe,QAAQ;AACnB;AAAC,MANcQ,eAAe;AAQ9B,SAASA,eAAe,EAAEH,oBAAoB;AAAE;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}