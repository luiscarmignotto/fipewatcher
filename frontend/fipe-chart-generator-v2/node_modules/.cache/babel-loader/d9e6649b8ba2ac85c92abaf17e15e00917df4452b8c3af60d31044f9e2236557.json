{"ast":null,"code":"var _jsxFileName = \"/home/luisc/react/fipewatcher/frontend/fipe-chart-generator-v2/src/Components/SearchAndPlotVehicleValue/GraphPlotPanel/GraphPlotPanel.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { GetPlotData } from '../../../interfaces/BackendCalls';\nimport LineChart from './GraphsStyles/LineChart';\nimport './GraphPlotPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphPlotPanel = props => {\n  _s();\n  const [plotData, setPlotData] = useState({\n    \"monthArray\": [],\n    \"valueArray\": []\n  });\n  useEffect(() => {\n    GetPlotData(props.vehicleInfo, props.plotOptions).then(result => setPlotData({\n      \"monthArray\": result.monthArray,\n      \"valueArray\": result.valueArray\n    }));\n  }, [props]);\n  console.log(\"plotData\", plotData);\n  return (\n    /*#__PURE__*/\n    // <div className=\"GraphPlotPanel\">\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: plotData && /*#__PURE__*/_jsxDEV(LineChart, {\n          monthArray: plotData.monthArray,\n          valueArray: plotData.valueArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(GraphPlotPanel, \"lJjpNPgCVIyI108hRLJL1CfU5e0=\");\n_c = GraphPlotPanel;\nexport default GraphPlotPanel;\nvar _c;\n$RefreshReg$(_c, \"GraphPlotPanel\");","map":{"version":3,"names":["React","useState","useEffect","GetPlotData","LineChart","GraphPlotPanel","props","plotData","setPlotData","vehicleInfo","plotOptions","then","result","monthArray","valueArray","console","log"],"sources":["/home/luisc/react/fipewatcher/frontend/fipe-chart-generator-v2/src/Components/SearchAndPlotVehicleValue/GraphPlotPanel/GraphPlotPanel.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { GetPlotData } from '../../../interfaces/BackendCalls';\nimport LineChart from './GraphsStyles/LineChart';\nimport './GraphPlotPanel.css'\n\n\nconst GraphPlotPanel = (props) => {\n\n    const [plotData, setPlotData] = useState({\n        \"monthArray\": [],\n        \"valueArray\": [] \n    });\n\n    useEffect(() => {\n        \n        GetPlotData(props.vehicleInfo, props.plotOptions).then((result) => setPlotData({\n            \"monthArray\": result.monthArray,\n            \"valueArray\": result.valueArray\n        }));\n\n    }, [props]);\n\n    console.log(\"plotData\", plotData);\n\n    return (\n        // <div className=\"GraphPlotPanel\">\n        <div >\n            {/* <div className=\"GraphPlotPanelHeading\">Gráfico De Preços</div> */}\n            {/* <div className=\"GraphPlotPanelPlot\"> */}\n            <div>\n                { plotData && \n                    <LineChart monthArray={plotData.monthArray} valueArray={plotData.valueArray}/>\n                }\n            </div>\n\n        </div>\n    );\n}\n\nexport default GraphPlotPanel;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAO,sBAAsB;AAAA;AAG7B,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAE9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrC,YAAY,EAAE,EAAE;IAChB,YAAY,EAAE;EAClB,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IAEZC,WAAW,CAACG,KAAK,CAACG,WAAW,EAAEH,KAAK,CAACI,WAAW,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAKJ,WAAW,CAAC;MAC3E,YAAY,EAAEI,MAAM,CAACC,UAAU;MAC/B,YAAY,EAAED,MAAM,CAACE;IACzB,CAAC,CAAC,CAAC;EAEP,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEXS,OAAO,CAACC,GAAG,CAAC,UAAU,EAAET,QAAQ,CAAC;EAEjC;IAAA;IACI;IACA;MAAA,uBAGI;QAAA,UACMA,QAAQ,iBACN,QAAC,SAAS;UAAC,UAAU,EAAEA,QAAQ,CAACM,UAAW;UAAC,UAAU,EAAEN,QAAQ,CAACO;QAAW;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAEhF;MAAA;MAAA;MAAA;IAAA;EAEJ;AAEd,CAAC;AAAA,GA/BKT,cAAc;AAAA,KAAdA,cAAc;AAiCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}