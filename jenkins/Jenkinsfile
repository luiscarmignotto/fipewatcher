pipeline {
    agent { label 'docker' }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Update Ansible Inventory') {
            steps {            
                script {
                    def playbooksRepoCredentials = credentials('git-repos')
                    def rolesRepoCredentials = credentials('git-repos')

                    echo "playbooksRepoCredentials: ${playbooksRepoCredentials}"
                    echo "rolesRepoCredentials: ${rolesRepoCredentials}"

                    git branch: 'master', credentialsId: playbooksRepoCredentials.id, url: 'git@github.com:luiscarmignotto/devops-ansible-k8s-builds.git'
                    git branch: 'master', credentialsId: rolesRepoCredentials.id, url: 'git@github.com:luiscarmignotto/devops-ansible-k8s-roles.git'

                    sh 'ls -lrth'

                    // def yamlData = readYaml(file: 'path/to/your/yaml/file.yml')
                    // yamlData.nested.structure.image.tag = 'new-image-tag'
                    // writeYaml(file: 'path/to/your/yaml/file.yml', data: yamlData)
                    // git add: '.'
                    // git commit: '-m "Update react app image tag"'
                    // git push          
                }
            }
        }        
        stage('Build and Push') {
            steps {
                script {
                  def packageJson = readJSON file: 'package.json'
                  def appName = packageJson.name
                  def appVersion = packageJson.version
                  def registryUrl = packageJson.dockerRegistryUrl
                  // def imageName = "${registryUrl}/${appName}:${appVersion}"             
                  def imageName = "${appName}:${appVersion}"
                  // sh "docker build -t ${imageName} ."
                  sh "minikube image build -t ${imageName} ."
                  sh "jenkins/scripts/dockerRegistryTunnel.sh"
                  // sh "docker push ${imageName}"
                }
            }
        }
        stage('Deploy') {
            steps {
                sh "echo deploying"
            }
        }
    }
}