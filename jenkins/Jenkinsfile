pipeline {
    agent { label 'docker' }
    stages {
        // stage('Checkout') {
        //     steps {
        //         checkout scm
        //     }
        // }
        stage('Checkout Git') {
            steps { 
                dir('APP') {
                    checkout scm
                    sh 'pwd'
                    sh 'ls -lrth'
                    sh 'ls -lrth ..'
                }
                dir('ANSIBLE_PLAYBOOKS') { 
                    withCredentials([sshUserPrivateKey(credentialsId: 'git-repos', keyFileVariable: 'SSH_KEY')]) {  
                        sh 'pwd'
                        sh 'ls -lrth'
                        sh 'ls -lrth ..'
                        sh '''
                        GIT_SSH_COMMAND="ssh -i $SSH_KEY" git clone git@github.com:luiscarmignotto/devops-ansible-k8s-builds.git
                        '''
                        sh 'pwd'
                        sh 'ls -lrth'
                        sh 'ls -lrth ..'
                    }
                }
                dir('ANSIBLE_ROLES') {
                    withCredentials([sshUserPrivateKey(credentialsId: 'git-repos', keyFileVariable: 'SSH_KEY')]) {  
                        sh 'pwd'
                        sh 'ls -lrth'
                        sh 'ls -lrth ..'
                        git branch: 'master', credentialsId: 'git-repos', url: 'git@github.com:luiscarmignotto/devops-ansible-k8s-roles.git'
                        sh 'pwd'
                        sh 'ls -lrth'
                        sh 'ls -lrth ..'
                    }
                }

                sh 'ls -lrth'
                sh 'ls -lrth ..'

            }
        }        
        stage('Build and Push') {
            steps {
                script {
                    dir('APP') {
                        def packageJson = readJSON file: 'package.json'
                        def appName = packageJson.name
                        def appVersion = packageJson.version
                        def registryUrl = packageJson.dockerRegistryUrl
                        // def imageName = "${registryUrl}/${appName}:${appVersion}"             
                        def imageName = "${appName}:${appVersion}"
                        // sh "docker build -t ${imageName} ."
                        sh "minikube image build -t ${imageName} ."
                        sh "jenkins/scripts/dockerRegistryTunnel.sh"
                        // sh "docker push ${imageName}"
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                sh "echo deploying"
            }
        }
    }
}