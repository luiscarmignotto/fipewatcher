pipeline {
    agent { label 'docker' }

    parameters {
        string(name: 'appVersion', defaultValue: '')
        string(name: 'appName', defaultValue: 'fipewatcher')
        string(name: 'imageName', defaultValue: '')
    }

    environment {
        PATH="${PATH}:/home/luisc/.local/bin"
    }

    stages {
        // stage('Checkout') {
        //     steps {
        //         checkout scm
        //     }
        // }
        stage('Checkout Git') {
            steps { 
                checkout scm
                dir('../ANSIBLE') {
                    sh 'rm -rf *'
                    dir('devops-ansible-k8s-builds') { 
                        git credentialsId: 'git-repos', url: 'git@github.com:luiscarmignotto/devops-ansible-k8s-builds.git'
                    }
                    dir('devops-ansible-k8s-roles') { 
                        git credentialsId: 'git-repos', url: 'git@github.com:luiscarmignotto/devops-ansible-k8s-roles.git'
                    }                    
                }
            }
        }  
        stage('Getting Build Info') {
            steps {
                script {
                    packageJson = readJSON file: 'package.json'
                    env.appName = packageJson.name
                    env.appVersion = packageJson.version     
                    env.imageName = "${env.appName}:${env.appVersion}"
                }
            }
        }
        stage('Updating Ansible Inventory') {
            steps {
                dir('../ANSIBLE/devops-ansible-k8s-builds') {
                    script {
                        def inventoryFile = 'inventory/group_vars/local_lab.yml'
                        def data = readYaml file: inventoryFile
                        data.solution.application.fipewatcher.image_tag = "${env.appVersion}"
                        sh "rm $inventoryFile"
                        writeYaml file: inventoryFile, data: data
                    }
                }

            }
        }    
        stage('Build') {
            steps {
                sh("sed -i \"s/versionPlaceholder/${env.appVersion}/g\" Dockerfile")
                sh("minikube image build -t ${env.imageName} .")
            }
        }
        stage('Deploy') {
            steps {
                dir('../ANSIBLE/devops-ansible-k8s-builds') {
                    sh 'whoami'
                    echo "PATH: ${PATH}"
                    sh 'pwd'
                    ansiblePlaybook(installation: 'main-ansible', inventory: 'inventory/local_lab.yml', playbook: 'site_install.yml')
                }
            }
        }
        stage('Commit Ansible Changes') {
            steps {
                dir('../ANSIBLE/devops-ansible-k8s-builds') {
                    withCredentials([sshUserPrivateKey(credentialsId: "git-repos", keyFileVariable: 'keyfile')]) {
                        sh("git checkout master")
                        sh("git add --all")
                        sh("git commit -m \"Jenkins Automatic message: fipewatcher image version updated to ${env.appVersion}\"")
                        sh("git tag -a "frontend-${env.appVersion}" -m 'Jenkins'")
                        sh("git push -u origin master --tags")
                    }
                }
            }
        }
    }
}